name: iOS starter workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Default Scheme
        id: set_default_scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.read)['project']['targets'][0]")
          echo "::set-output name=default_scheme::$default"
          echo "Using default scheme: $default"

      - name: Debug Info
        run: |
          echo "Current directory contents:"
          ls -A
          echo "Detected scheme: ${{ steps.set_default_scheme.outputs.default_scheme }}"

      - name: Build and Test
        env:
          scheme: ${{ steps.set_default_scheme.outputs.default_scheme }}
        run: |
          # Determine whether to use workspace or project
          if [ -d "$(pwd)/$(ls -A | grep -i \\.xcworkspace\$)" ]; then
            workspace_or_project="-workspace $(pwd)/$(ls -A | grep -i \\.xcworkspace\$)"
          else
            workspace_or_project="-project $(pwd)/$(ls -A | grep -i \\.xcodeproj\$)"
          fi

          # Select a device from the available simulators
          device=$(xcrun simctl list devices --json | jq -r '.devices | to_entries[] | .value[] | select(.name | test("iPhone")) | .name' | head -n 1)
          echo "Selected device: $device"

          # Build
          xcodebuild build-for-testing -scheme "$scheme" $workspace_or_project -destination "platform=iOS Simulator,name=$device"

      - name: Run Tests
        env:
          scheme: ${{ steps.set_default_scheme.outputs.default_scheme }}
        run: |
          # Determine whether to use workspace or project
          if [ -d "$(pwd)/$(ls -A | grep -i \\.xcworkspace\$)" ]; then
            workspace_or_project="-workspace $(pwd)/$(ls -A | grep -i \\.xcworkspace\$)"
          else
            workspace_or_project="-project $(pwd)/$(ls -A | grep -i \\.xcodeproj\$)"
          fi

          # Select a device from the available simulators
          device=$(xcrun simctl list devices --json | jq -r '.devices | to_entries[] | .value[] | select(.name | test("iPhone")) | .name' | head -n 1)
          echo "Selected device: $device"

          # Test
          xcodebuild test-without-building -scheme "$scheme" $workspace_or_project -destination "platform=iOS Simulator,name=$device"

  set_default_scheme:
    name: Set Default Scheme
    runs-on: macos-latest
    outputs:
      default_scheme: ${{ steps.set_default_scheme.outputs.default_scheme }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Default Scheme
        id: set_default_scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.read)['project']['targets'][0]")
          echo "::set-output name=default_scheme::$default"
          echo "Using default scheme: $default"
